(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{1231:function(n,t,e){},1988:function(n,t){},1989:function(n,t){},1990:function(n,t){},1991:function(n,t){},1992:function(n,t){},1993:function(n,t){},1994:function(n,t,e){"use strict";var r=e(1231);e.n(r).a},1995:function(n,t){},1996:function(n,t){},1997:function(n,t){},1998:function(n,t){},2329:function(n,t,e){"use strict";e.r(t);var r=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("a-input-number",{attrs:{id:"inputNumber",min:1,max:1e3,maxlength:"2",placeholder:"maxlength=2"},on:{change:n.onChange},model:{value:n.value,callback:function(t){n.value=t},expression:"value"}}),n._v("\n  当前值："+n._s(n.value)+"\n")],1)};r._withStripped=!0;var a={data:function(){return{value:3}},methods:{onChange:function(n){console.log("changed",n)}}},i=e(32),v=e(1988),o=e.n(v),u=e(1989),l=e.n(u),s=Object(i.a)(a,r,[],!1,null,null,null);"function"==typeof o.a&&o()(s),"function"==typeof l.a&&l()(s),s.options.__file="components/input-number/demo/basic.vue";var d=s.exports,_='<cn>\r\n#### 基本\r\n\r\n数字输入框。\r\n</cn>\r\n<us>\r\n#### Basic\r\n</us>\r\n\r\n\r\n<template>\r\n  <div>\r\n    <a-input-number id="inputNumber" v-model="value" :min="1" :max="1000" maxlength="2" placeholder="maxlength=2" @change="onChange" />\r\n    当前值：{{ value }}\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      value: 3,\r\n    };\r\n  },\r\n  methods: {\r\n    onChange(value) {\r\n      console.log(\'changed\', value);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n',c=function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("a-input-number",{attrs:{min:1,max:10,disabled:this.disabled,"default-value":3}}),this._v(" "),t("div",{staticStyle:{marginTop:"20px"}},[t("a-button",{attrs:{type:"primary"},on:{click:this.toggle}},[this._v("\n      Toggle disabled\n    ")])],1)],1)};c._withStripped=!0;var m={data:function(){return{disabled:!0}},methods:{toggle:function(){this.disabled=!this.disabled}}},p=e(1990),h=e.n(p),f=e(1991),g=e.n(f),b=Object(i.a)(m,c,[],!1,null,null,null);"function"==typeof h.a&&h()(b),"function"==typeof g.a&&g()(b),b.options.__file="components/input-number/demo/disabled.vue";var x=b.exports,y='<cn>\r\n#### 不可用 \r\n\r\n点击按钮切换可用状态。\r\n</cn>\r\n<us>\r\n#### Disabled\r\n</us>\r\n\r\n\r\n<template>\r\n  <div>\r\n    <a-input-number :min="1" :max="10" :disabled="disabled" :default-value="3" />\r\n    <div style="marginTop:20px">\r\n      <a-button type="primary" @click="toggle">\r\n        Toggle disabled\r\n      </a-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      disabled: true,\r\n    };\r\n  },\r\n  methods: {\r\n    toggle() {\r\n      this.disabled = !this.disabled;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n',C=function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("a-input-number",{attrs:{"default-value":1e3,formatter:function(n){return("$ "+n).replace(/\B(?=(\d{3})+(?!\d))/g,",")},parser:function(n){return n.replace(/\$\s?|(,*)/g,"")}},on:{change:this.onChange}}),this._v(" "),t("a-input-number",{attrs:{"default-value":100,min:0,max:100,formatter:function(n){return n+"%"},parser:function(n){return n.replace("%","")}},on:{change:this.onChange}})],1)};C._withStripped=!0;var w={methods:{onChange:function(n){console.log("changed",n)}}},$=e(1992),S=e.n($),z=e(1993),E=e.n(z),j=Object(i.a)(w,C,[],!1,null,null,null);"function"==typeof S.a&&S()(j),"function"==typeof E.a&&E()(j),j.options.__file="components/input-number/demo/formatter.vue";var O=j.exports,I='<cn>\r\n#### 格式化展示 \r\n\r\n通过 `formatter` 格式化数字，以展示具有具体含义的数据，往往需要配合 `parser` 一起使用。\r\n</cn>\r\n<us>\r\n#### Formatter\r\n</us>\r\n\r\n\r\n<template>\r\n  <div>\r\n    <a-input-number\r\n      :default-value="1000"\r\n      :formatter="value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \',\')"\r\n      :parser="value => value.replace(/\\$\\s?|(,*)/g, \'\')"\r\n      @change="onChange"\r\n    />\r\n    <a-input-number\r\n      :default-value="100"\r\n      :min="0"\r\n      :max="100"\r\n      :formatter="value => `${value}%`"\r\n      :parser="value => value.replace(\'%\', \'\')"\r\n      @change="onChange"\r\n    />\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  methods: {\r\n    onChange(value) {\r\n      console.log(\'changed\', value);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n',k=function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("a-input-number",{attrs:{size:"large",min:1,max:1e5,"default-value":3},on:{change:this.onChange}}),this._v(" "),t("a-input-number",{attrs:{min:1,max:1e5,"default-value":3},on:{change:this.onChange}}),this._v(" "),t("a-input-number",{attrs:{size:"small",min:1,max:1e5,"default-value":3},on:{change:this.onChange}})],1)};k._withStripped=!0;var T={methods:{onChange:function(n){console.log("changed",n)}}},N=(e(1994),e(1995)),A=e.n(N),B=e(1996),D=e.n(B),F=Object(i.a)(T,k,[],!1,null,"13d27ebe",null);"function"==typeof A.a&&A()(F),"function"==typeof D.a&&D()(F),F.options.__file="components/input-number/demo/sizes.vue";var P=F.exports,J='<cn>\r\n#### 三种大小 \r\n\r\n三种大小的数字输入框，当 size 分别为 `large` 和 `small` 时，输入框高度为 `40px` 和 `24px` ，默认高度为 `32px`。\r\n</cn>\r\n<us>\r\n#### Sizes\r\n</us>\r\n\r\n\r\n<template>\r\n  <div>\r\n    <a-input-number size="large" :min="1" :max="100000" :default-value="3" @change="onChange" />\r\n    <a-input-number :min="1" :max="100000" :default-value="3" @change="onChange" />\r\n    <a-input-number size="small" :min="1" :max="100000" :default-value="3" @change="onChange" />\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  methods: {\r\n    onChange(value) {\r\n      console.log(\'changed\', value);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n<style scoped>\r\n.ant-input-number {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n',U=function(){var n=this.$createElement;return(this._self._c||n)("a-input-number",{attrs:{min:0,max:10,step:.1},on:{change:this.onChange}})};U._withStripped=!0;var V={methods:{onChange:function(n){console.log("changed",n)}}},q=e(1997),G=e.n(q),H=e(1998),K=e.n(H),L=Object(i.a)(V,U,[],!1,null,null,null);"function"==typeof G.a&&G()(L),"function"==typeof K.a&&K()(L),L.options.__file="components/input-number/demo/decimals.vue";var M=L.exports,Q='<cn>\r\n#### 小数 \r\n\r\n和原生的数字输入框一样，value 的精度由 step 的小数位数决定。\r\n</cn>\r\n<us>\r\n#### Decimals\r\n</us>\r\n\r\n\r\n<template>\r\n  <a-input-number :min="0" :max="10" :step="0.1" @change="onChange" />\r\n</template>\r\n<script>\r\nexport default {\r\n  methods: {\r\n    onChange(value) {\r\n      console.log(\'changed\', value);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n',R=function(){var n=this.$createElement;this._self._c;return this._m(0)};R._withStripped=!0;var W=Object(i.a)({},R,[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("h2",{attrs:{id:"API"}},[n._v("API "),e("a",{staticClass:"anchor",attrs:{href:"#API","aria-hidden":"true"}},[n._v("#")])]),n._v(" "),e("p",[n._v("属性如下")]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("成员")]),n._v(" "),e("th",[n._v("说明")]),n._v(" "),e("th",[n._v("类型")]),n._v(" "),e("th",[n._v("默认值")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("autoFocus")]),n._v(" "),e("td",[n._v("自动获取焦点")]),n._v(" "),e("td",[n._v("boolean")]),n._v(" "),e("td",[n._v("false")])]),n._v(" "),e("tr",[e("td",[n._v("defaultValue")]),n._v(" "),e("td",[n._v("初始值")]),n._v(" "),e("td",[n._v("number")]),n._v(" "),e("td")]),n._v(" "),e("tr",[e("td",[n._v("disabled")]),n._v(" "),e("td",[n._v("禁用")]),n._v(" "),e("td",[n._v("boolean")]),n._v(" "),e("td",[n._v("false")])]),n._v(" "),e("tr",[e("td",[n._v("formatter")]),n._v(" "),e("td",[n._v("指定输入框展示值的格式")]),n._v(" "),e("td",[n._v("function(value: number")]),n._v(" "),e("td",[n._v("string): string")])]),n._v(" "),e("tr",[e("td",[n._v("max")]),n._v(" "),e("td",[n._v("最大值")]),n._v(" "),e("td",[n._v("number")]),n._v(" "),e("td",[n._v("Infinity")])]),n._v(" "),e("tr",[e("td",[n._v("min")]),n._v(" "),e("td",[n._v("最小值")]),n._v(" "),e("td",[n._v("number")]),n._v(" "),e("td",[n._v("-Infinity")])]),n._v(" "),e("tr",[e("td",[n._v("parser")]),n._v(" "),e("td",[n._v("指定从 formatter 里转换回数字的方式，和 formatter 搭配使用")]),n._v(" "),e("td",[n._v("function( string): number")]),n._v(" "),e("td",[n._v("-")])]),n._v(" "),e("tr",[e("td",[n._v("precision")]),n._v(" "),e("td",[n._v("数值精度")]),n._v(" "),e("td",[n._v("number")]),n._v(" "),e("td",[n._v("-")])]),n._v(" "),e("tr",[e("td",[n._v("decimalSeparator")]),n._v(" "),e("td",[n._v("小数点")]),n._v(" "),e("td",[n._v("string")]),n._v(" "),e("td",[n._v("-")])]),n._v(" "),e("tr",[e("td",[n._v("size")]),n._v(" "),e("td",[n._v("输入框大小")]),n._v(" "),e("td",[n._v("string")]),n._v(" "),e("td",[n._v("无")])]),n._v(" "),e("tr",[e("td",[n._v("step")]),n._v(" "),e("td",[n._v("每次改变步数，可以为小数")]),n._v(" "),e("td",[n._v("number")]),n._v(" "),e("td",[n._v("string")])]),n._v(" "),e("tr",[e("td",[n._v("value(v-model)")]),n._v(" "),e("td",[n._v("当前值")]),n._v(" "),e("td",[n._v("number")]),n._v(" "),e("td")]),n._v(" "),e("tr",[e("td",[n._v("maxlength")]),n._v(" "),e("td",[n._v("最多输入的字符数")]),n._v(" "),e("td",[n._v("string|number")]),n._v(" "),e("td")])])]),n._v(" "),e("h3",{attrs:{id:"事件"}},[n._v("事件 "),e("a",{staticClass:"anchor",attrs:{href:"#事件","aria-hidden":"true"}},[n._v("#")])]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("事件名称")]),n._v(" "),e("th",[n._v("说明")]),n._v(" "),e("th",[n._v("回调参数")]),n._v(" "),e("th",[n._v("版本")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("change")]),n._v(" "),e("td",[n._v("变化回调")]),n._v(" "),e("td",[n._v("Function(value: number")]),n._v(" "),e("td",[n._v("string)")])]),n._v(" "),e("tr",[e("td",[n._v("pressEnter")]),n._v(" "),e("td",[n._v("按下回车的回调")]),n._v(" "),e("td",[n._v("function(e)")]),n._v(" "),e("td")])])]),n._v(" "),e("h2",{attrs:{id:"方法"}},[n._v("方法 "),e("a",{staticClass:"anchor",attrs:{href:"#方法","aria-hidden":"true"}},[n._v("#")])]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("名称")]),n._v(" "),e("th",[n._v("描述")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("blur()")]),n._v(" "),e("td",[n._v("移除焦点")])]),n._v(" "),e("tr",[e("td",[n._v("focus()")]),n._v(" "),e("td",[n._v("获取焦点")])])])])])}],!1,null,null,null);W.options.__file="components/input-number/index.zh-CN.md";var X=W.exports,Y=function(){var n=this.$createElement;return(this._self._c||n)("div")};Y._withStripped=!0;var Z=Object(i.a)({},Y,[],!1,null,null,null);Z.options.__file="components/input-number/index.en-US.md";var nn=Z.exports,tn="",en="# 数字输入框\n\n通过鼠标或键盘，输入范围内的数值。\n\n## 何时使用\n\n当需要获取标准数值时。\n\n## 代码演示",rn={category:"Components",subtitle:"数字输入框",type:"Data Entry",zhType:"数据录入",cols:2,title:"InputNumber",render:function(){var n=arguments[0];return n("div",[n("md",{attrs:{cn:en,us:tn}}),n("a-row",{style:"margin-left: -8px;margin-right: -8px;"},[n("a-col",{attrs:{span:12},class:"code-boxes-col-2-1"},[n("demo-container",{attrs:{code:_}},[n(d)]),n("demo-container",{attrs:{code:y}},[n(x)]),n("demo-container",{attrs:{code:I}},[n(O)])]),n("a-col",{attrs:{span:12},class:"code-boxes-col-2-1"},[n("demo-container",{attrs:{code:J}},[n(P)]),n("demo-container",{attrs:{code:Q}},[n(M)])])]),n("api",[n(X,{slot:"cn"}),n(nn)])])}},an=Object(i.a)(rn,void 0,void 0,!1,null,null,null);an.options.__file="components/input-number/demo/index.vue";t.default=an.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{2432:function(e,t){},2433:function(e,t){},2434:function(e,t){e.exports="<cn>\r\n#### 受控操作示例 \r\n\r\n受控操作示例\r\n</cn>\r\n<us>\r\n#### Controlled Tree\r\n</us>\r\n\r\r\n<template>\r\n  <a-tree\r\n    v-model=\"checkedKeys\"\r\n    checkable\r\n    :expanded-keys=\"expandedKeys\"\r\n    :auto-expand-parent=\"autoExpandParent\"\r\n    :selected-keys=\"selectedKeys\"\r\n    :tree-data=\"treeData\"\r\n    @expand=\"onExpand\"\r\n    @select=\"onSelect\"\r\n  />\r\n</template>\r\n<script>\r\nconst treeData = [\r\n  {\r\n    title: '0-0',\r\n    key: '0-0',\r\n    children: [\r\n      {\r\n        title: '0-0-0',\r\n        key: '0-0-0',\r\n        children: [\r\n          { title: '0-0-0-0', key: '0-0-0-0' },\r\n          { title: '0-0-0-1', key: '0-0-0-1' },\r\n          { title: '0-0-0-2', key: '0-0-0-2' },\r\n        ],\r\n      },\r\n      {\r\n        title: '0-0-1',\r\n        key: '0-0-1',\r\n        children: [\r\n          { title: '0-0-1-0', key: '0-0-1-0' },\r\n          { title: '0-0-1-1', key: '0-0-1-1' },\r\n          { title: '0-0-1-2', key: '0-0-1-2' },\r\n        ],\r\n      },\r\n      {\r\n        title: '0-0-2',\r\n        key: '0-0-2',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: '0-1',\r\n    key: '0-1',\r\n    children: [\r\n      { title: '0-1-0-0', key: '0-1-0-0' },\r\n      { title: '0-1-0-1', key: '0-1-0-1' },\r\n      { title: '0-1-0-2', key: '0-1-0-2' },\r\n    ],\r\n  },\r\n  {\r\n    title: '0-2',\r\n    key: '0-2',\r\n  },\r\n];\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      expandedKeys: ['0-0-0', '0-0-1'],\r\n      autoExpandParent: true,\r\n      checkedKeys: ['0-0-0'],\r\n      selectedKeys: [],\r\n      treeData,\r\n    };\r\n  },\r\n  watch: {\r\n    checkedKeys(val) {\r\n      console.log('onCheck', val);\r\n    },\r\n  },\r\n  methods: {\r\n    onExpand(expandedKeys) {\r\n      console.log('onExpand', expandedKeys);\r\n      // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n      // or, you can remove all expanded children keys.\r\n      this.expandedKeys = expandedKeys;\r\n      this.autoExpandParent = false;\r\n    },\r\n    onCheck(checkedKeys) {\r\n      console.log('onCheck', checkedKeys);\r\n      this.checkedKeys = checkedKeys;\r\n    },\r\n    onSelect(selectedKeys, info) {\r\n      console.log('onSelect', info);\r\n      this.selectedKeys = selectedKeys;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n"},2435:function(e,t){},2436:function(e,t){},2437:function(e,t){e.exports="<cn>\r\n#### 自定义TreeNode字段 \r\n\r\n替换treeNode中 title,key,children字段为treeData中对应的字段\r\n</cn>\r\n<us>\r\n#### Replacefields\r\n</us>\r\n\r\r\n<template>\r\n  <a-tree\r\n    checkable\r\n    :tree-data=\"treeData\"\r\n    :default-expanded-keys=\"['0-0-0', '0-0-1']\"\r\n    :default-selected-keys=\"['0-0-0', '0-0-1']\"\r\n    :default-checked-keys=\"['0-0-0', '0-0-1']\"\r\n    :replace-fields=\"replaceFields\"\r\n    @select=\"onSelect\"\r\n    @check=\"onCheck\"\r\n  />\r\n</template>\r\n<script>\r\nconst treeData = [\r\n  {\r\n    name: 'parent 1',\r\n    key: '0-0',\r\n    child: [\r\n      {\r\n        name: '张晨成',\r\n        key: '0-0-0',\r\n        disabled: true,\r\n        child: [\r\n          { name: 'leaf', key: '0-0-0-0', disableCheckbox: true },\r\n          { name: 'leaf', key: '0-0-0-1' },\r\n        ],\r\n      },\r\n      {\r\n        name: 'parent 1-1',\r\n        key: '0-0-1',\r\n        child: [{ key: '0-0-1-0', name: 'zcvc' }],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      treeData,\r\n      replaceFields: {\r\n        children: 'child',\r\n        title: 'name',\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    onSelect(selectedKeys, info) {\r\n      console.log('selected', selectedKeys, info);\r\n    },\r\n    onCheck(checkedKeys, info) {\r\n      console.log('onCheck', checkedKeys, info);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n"},2438:function(e,t){},2439:function(e,t){},2440:function(e,t){e.exports="<cn>\r\n#### 拖动示例 \r\n\r\n将节点拖拽到其他节点内部或前后。\r\n</cn>\r\n<us>\r\n#### Draggable\r\n</us>\r\n\r\r\n<template>\r\n  <a-tree\r\n    class=\"draggable-tree\"\r\n    :default-expanded-keys=\"expandedKeys\"\r\n    draggable\r\n    :tree-data=\"gData\"\r\n    @dragenter=\"onDragEnter\"\r\n    @drop=\"onDrop\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nconst x = 3;\r\nconst y = 2;\r\nconst z = 1;\r\nconst gData = [];\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n  const preKey = _preKey || '0';\r\n  const tns = _tns || gData;\r\n\r\n  const children = [];\r\n  for (let i = 0; i < x; i++) {\r\n    const key = `${preKey}-${i}`;\r\n    tns.push({ title: key, key });\r\n    if (i < y) {\r\n      children.push(key);\r\n    }\r\n  }\r\n  if (_level < 0) {\r\n    return tns;\r\n  }\r\n  const level = _level - 1;\r\n  children.forEach((key, index) => {\r\n    tns[index].children = [];\r\n    return generateData(level, key, tns[index].children);\r\n  });\r\n};\r\ngenerateData(z);\r\nexport default {\r\n  data() {\r\n    return {\r\n      gData,\r\n      expandedKeys: ['0-0', '0-0-0', '0-0-0-0'],\r\n    };\r\n  },\r\n  methods: {\r\n    onDragEnter(info) {\r\n      console.log(info);\r\n      // expandedKeys 需要受控时设置\r\n      // this.expandedKeys = info.expandedKeys\r\n    },\r\n    onDrop(info) {\r\n      console.log(info);\r\n      const dropKey = info.node.eventKey;\r\n      const dragKey = info.dragNode.eventKey;\r\n      const dropPos = info.node.pos.split('-');\r\n      const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\r\n      const loop = (data, key, callback) => {\r\n        data.forEach((item, index, arr) => {\r\n          if (item.key === key) {\r\n            return callback(item, index, arr);\r\n          }\r\n          if (item.children) {\r\n            return loop(item.children, key, callback);\r\n          }\r\n        });\r\n      };\r\n      const data = [...this.gData];\r\n\r\n      // Find dragObject\r\n      let dragObj;\r\n      loop(data, dragKey, (item, index, arr) => {\r\n        arr.splice(index, 1);\r\n        dragObj = item;\r\n      });\r\n      if (!info.dropToGap) {\r\n        // Drop on the content\r\n        loop(data, dropKey, item => {\r\n          item.children = item.children || [];\r\n          // where to insert 示例添加到尾部，可以是随意位置\r\n          item.children.push(dragObj);\r\n        });\r\n      } else if (\r\n        (info.node.children || []).length > 0 && // Has children\r\n        info.node.expanded && // Is expanded\r\n        dropPosition === 1 // On the bottom gap\r\n      ) {\r\n        loop(data, dropKey, item => {\r\n          item.children = item.children || [];\r\n          // where to insert 示例添加到尾部，可以是随意位置\r\n          item.children.unshift(dragObj);\r\n        });\r\n      } else {\r\n        let ar;\r\n        let i;\r\n        loop(data, dropKey, (item, index, arr) => {\r\n          ar = arr;\r\n          i = index;\r\n        });\r\n        if (dropPosition === -1) {\r\n          ar.splice(i, 0, dragObj);\r\n        } else {\r\n          ar.splice(i + 1, 0, dragObj);\r\n        }\r\n      }\r\n      this.gData = data;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n"},2441:function(e,t){},2442:function(e,t){},2443:function(e,t){e.exports='<cn>\r\n#### 连接线 \r\n\r\n带连接线的树。\r\n</cn>\r\n<us>\r\n#### Tree With Line\r\n</us>\r\n\r\r\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 16px">\r\n      showLine: <a-switch v-model="showLine" />\r\n      <br />\r\n      <br />\r\n      showIcon: <a-switch v-model="showIcon" />\r\n    </div>\r\n    <a-tree\r\n      :show-line="showLine"\r\n      :show-icon="showIcon"\r\n      :default-expanded-keys="[\'0-0-0\', \'0-0-1\', \'0-0-2\']"\r\n      @select="onSelect"\r\n    >\r\n      <a-icon slot="icon" type="carry-out" />\r\n      <a-tree-node key="0-0">\r\n        <a-icon slot="icon" type="carry-out" />\r\n        <span slot="title" style="color: #1890ff">parent 1</span>\r\n        <a-tree-node key="0-0-0" title="parent 1-0">\r\n          <a-icon slot="icon" type="carry-out" />\r\n          <a-tree-node key="0-0-0-0" title="leaf">\r\n            <a-icon slot="icon" type="carry-out" />\r\n          </a-tree-node>\r\n          <a-tree-node key="0-0-0-1" title="leaf">\r\n            <a-icon slot="icon" type="carry-out" />\r\n          </a-tree-node>\r\n          <a-tree-node key="0-0-0-2" title="leaf">\r\n            <a-icon slot="icon" type="carry-out" />\r\n          </a-tree-node>\r\n        </a-tree-node>\r\n        <a-tree-node key="0-0-1" title="parent 1-1">\r\n          <a-icon slot="icon" type="carry-out" />\r\n          <a-tree-node key="0-0-1-0" title="leaf">\r\n            <a-icon slot="icon" type="carry-out" />\r\n          </a-tree-node>\r\n        </a-tree-node>\r\n        <a-tree-node key="0-0-2" title="parent 1-2">\r\n          <a-icon slot="icon" type="carry-out" />\r\n          <a-tree-node key="0-0-2-0" title="leaf">\r\n            <a-icon slot="icon" type="carry-out" />\r\n          </a-tree-node>\r\n          <a-tree-node key="0-0-2-1" title="leaf">\r\n            <a-icon slot="icon" type="carry-out" />\r\n            <a-icon slot="switcherIcon" type="form" />\r\n          </a-tree-node>\r\n        </a-tree-node>\r\n      </a-tree-node>\r\n    </a-tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showLine: true,\r\n      showIcon: false,\r\n    };\r\n  },\r\n  methods: {\r\n    onSelect(selectedKeys, info) {\r\n      console.log(\'selected\', selectedKeys, info);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n'},2444:function(e,t){},2445:function(e,t){},2446:function(e,t){e.exports='<cn>\r\n#### 目录 \r\n\r\n内置的目录树，`multiple` 模式支持 `ctrl(Windows)` / `command(Mac)` 复选。\r\n</cn>\r\n<us>\r\n#### Directory\r\n</us>\r\n\r\r\n<template>\r\n  <a-directory-tree multiple default-expand-all @select="onSelect" @expand="onExpand">\r\n    <a-tree-node key="0-0" title="parent 0">\r\n      <a-tree-node key="0-0-0" title="leaf 0-0" is-leaf />\r\n      <a-tree-node key="0-0-1" title="leaf 0-1" is-leaf />\r\n    </a-tree-node>\r\n    <a-tree-node key="0-1" title="parent 1">\r\n      <a-tree-node key="0-1-0" title="leaf 1-0" is-leaf />\r\n      <a-tree-node key="0-1-1" title="leaf 1-1" is-leaf />\r\n    </a-tree-node>\r\n  </a-directory-tree>\r\n</template>\r\n<script>\r\nexport default {\r\n  methods: {\r\n    onSelect(keys, event) {\r\n      console.log(\'Trigger Select\', keys, event);\r\n    },\r\n    onExpand() {\r\n      console.log(\'Trigger Expand\');\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n'},2447:function(e,t){},2448:function(e,t){},2449:function(e,t){e.exports="<cn>\r\n#### 基本用法 \r\n\r\n最简单的用法，展示可勾选，可选中，禁用，默认展开等功能。\r\n</cn>\r\n<us>\r\n#### Basic\r\n</us>\r\n\r\r\n<template>\r\n  <a-tree\r\n    checkable\r\n    :tree-data=\"treeData\"\r\n    :default-expanded-keys=\"['0-0-0', '0-0-1']\"\r\n    :default-selected-keys=\"['0-0-0', '0-0-1']\"\r\n    :default-checked-keys=\"['0-0-0', '0-0-1']\"\r\n    @select=\"onSelect\"\r\n    @check=\"onCheck\"\r\n  >\r\n    <span slot=\"title0010\" style=\"color: #1890ff\">sss</span>\r\n  </a-tree>\r\n</template>\r\n<script>\r\nconst treeData = [\r\n  {\r\n    title: 'parent 1',\r\n    key: '0-0',\r\n    children: [\r\n      {\r\n        title: 'parent 1-0',\r\n        key: '0-0-0',\r\n        disabled: true,\r\n        children: [\r\n          { title: 'leaf', key: '0-0-0-0', disableCheckbox: true },\r\n          { title: 'leaf', key: '0-0-0-1' },\r\n        ],\r\n      },\r\n      {\r\n        title: 'parent 1-1',\r\n        key: '0-0-1',\r\n        children: [{ key: '0-0-1-0', slots: { title: 'title0010' } }],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      treeData,\r\n    };\r\n  },\r\n  methods: {\r\n    onSelect(selectedKeys, info) {\r\n      console.log('selected', selectedKeys, info);\r\n    },\r\n    onCheck(checkedKeys, info) {\r\n      console.log('onCheck', checkedKeys, info);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n"},2450:function(e,t){},2451:function(e,t){},2452:function(e,t){e.exports="<cn>\r\n#### 自定义图标 \r\n\r\n可以针对不同的节点定制图标。\r\n</cn>\r\n<us>\r\n#### Customize Icon\r\n</us>\r\n\r\r\n<template>\r\n  <a-tree :tree-data=\"treeData\" show-icon default-expand-all :default-selected-keys=\"['0-0-0']\">\r\n    <a-icon slot=\"switcherIcon\" type=\"down\" />\r\n    <a-icon slot=\"smile\" type=\"smile-o\" />\r\n    <a-icon slot=\"meh\" type=\"smile-o\" />\r\n    <template slot=\"custom\" slot-scope=\"{ selected }\">\r\n      <a-icon :type=\"selected ? 'frown' : 'frown-o'\" />\r\n    </template>\r\n  </a-tree>\r\n</template>\r\n<script>\r\nconst treeData = [\r\n  {\r\n    title: 'parent 1',\r\n    key: '0-0',\r\n    slots: {\r\n      icon: 'smile',\r\n    },\r\n    children: [\r\n      { title: 'leaf', key: '0-0-0', slots: { icon: 'meh' } },\r\n      { title: 'leaf', key: '0-0-1', scopedSlots: { icon: 'custom' } },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      treeData,\r\n    };\r\n  },\r\n  methods: {\r\n    onSelect(selectedKeys, info) {\r\n      console.log('selected', selectedKeys, info);\r\n    },\r\n    onCheck(checkedKeys, info) {\r\n      console.log('onCheck', checkedKeys, info);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n"},2453:function(e,t){},2454:function(e,t){},2455:function(e,t){e.exports="<cn>\r\n#### 异步数据加载 \r\n\r\n点击展开节点，动态加载数据。\r\n</cn>\r\n<us>\r\n#### Load Data Asynchronously\r\n</us>\r\n\r\r\n<template>\r\n  <a-tree :load-data=\"onLoadData\" :tree-data=\"treeData\" />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      treeData: [\r\n        { title: 'Expand to load', key: '0' },\r\n        { title: 'Expand to load', key: '1' },\r\n        { title: 'Tree Node', key: '2', isLeaf: true },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    onLoadData(treeNode) {\r\n      return new Promise(resolve => {\r\n        if (treeNode.dataRef.children) {\r\n          resolve();\r\n          return;\r\n        }\r\n        setTimeout(() => {\r\n          treeNode.dataRef.children = [\r\n            { title: 'Child Node', key: `${treeNode.eventKey}-0` },\r\n            { title: 'Child Node', key: `${treeNode.eventKey}-1` },\r\n          ];\r\n          this.treeData = [...this.treeData];\r\n          resolve();\r\n        }, 1000);\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n"},2456:function(e,t){},2457:function(e,t){},2458:function(e,t){e.exports='<cn>\r\n#### 可搜索 \r\n\r\n可搜索的树。\r\n</cn>\r\n<us>\r\n#### Searchable\r\n</us>\r\n\r\r\n<template>\r\n  <div>\r\n    <a-input-search style="margin-bottom: 8px" placeholder="Search" @change="onChange" />\r\n    <a-tree\r\n      :expanded-keys="expandedKeys"\r\n      :auto-expand-parent="autoExpandParent"\r\n      :tree-data="gData"\r\n      @expand="onExpand"\r\n    >\r\n      <template slot="title" slot-scope="{ title }">\r\n        <span v-if="title.indexOf(searchValue) > -1">\r\n          {{ title.substr(0, title.indexOf(searchValue)) }}\r\n          <span style="color: #f50">{{ searchValue }}</span>\r\n          {{ title.substr(title.indexOf(searchValue) + searchValue.length) }}\r\n        </span>\r\n        <span v-else>{{ title }}</span>\r\n      </template>\r\n    </a-tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst x = 3;\r\nconst y = 2;\r\nconst z = 1;\r\nconst gData = [];\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n  const preKey = _preKey || \'0\';\r\n  const tns = _tns || gData;\r\n\r\n  const children = [];\r\n  for (let i = 0; i < x; i++) {\r\n    const key = `${preKey}-${i}`;\r\n    tns.push({ title: key, key, scopedSlots: { title: \'title\' } });\r\n    if (i < y) {\r\n      children.push(key);\r\n    }\r\n  }\r\n  if (_level < 0) {\r\n    return tns;\r\n  }\r\n  const level = _level - 1;\r\n  children.forEach((key, index) => {\r\n    tns[index].children = [];\r\n    return generateData(level, key, tns[index].children);\r\n  });\r\n};\r\ngenerateData(z);\r\n\r\nconst dataList = [];\r\nconst generateList = data => {\r\n  for (let i = 0; i < data.length; i++) {\r\n    const node = data[i];\r\n    const key = node.key;\r\n    dataList.push({ key, title: key });\r\n    if (node.children) {\r\n      generateList(node.children);\r\n    }\r\n  }\r\n};\r\ngenerateList(gData);\r\n\r\nconst getParentKey = (key, tree) => {\r\n  let parentKey;\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const node = tree[i];\r\n    if (node.children) {\r\n      if (node.children.some(item => item.key === key)) {\r\n        parentKey = node.key;\r\n      } else if (getParentKey(key, node.children)) {\r\n        parentKey = getParentKey(key, node.children);\r\n      }\r\n    }\r\n  }\r\n  return parentKey;\r\n};\r\nexport default {\r\n  data() {\r\n    return {\r\n      expandedKeys: [],\r\n      searchValue: \'\',\r\n      autoExpandParent: true,\r\n      gData,\r\n    };\r\n  },\r\n  methods: {\r\n    onExpand(expandedKeys) {\r\n      this.expandedKeys = expandedKeys;\r\n      this.autoExpandParent = false;\r\n    },\r\n    onChange(e) {\r\n      const value = e.target.value;\r\n      const expandedKeys = dataList\r\n        .map(item => {\r\n          if (item.title.indexOf(value) > -1) {\r\n            return getParentKey(item.key, gData);\r\n          }\r\n          return null;\r\n        })\r\n        .filter((item, i, self) => item && self.indexOf(item) === i);\r\n      Object.assign(this, {\r\n        expandedKeys,\r\n        searchValue: value,\r\n        autoExpandParent: true,\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n'},2459:function(e,t){},2460:function(e,t){},2461:function(e,t){e.exports='<cn>\r\n#### 自定义展开/折叠图标 \r\n\r\n自定义展开/折叠图标。\r\n</cn>\r\n<us>\r\n#### Customize Collapse_expand Icon\r\n</us>\r\n\r\r\n<template>\r\n  <a-tree show-line :default-expanded-keys="[\'0-0-0\']" @select="onSelect">\r\n    <a-icon slot="switcherIcon" type="down" />\r\n    <a-tree-node key="0-0" title="parent 1">\r\n      <a-tree-node key="0-0-0" title="parent 1-0">\r\n        <a-tree-node key="0-0-0-0" title="leaf" />\r\n        <a-tree-node key="0-0-0-1" title="leaf" />\r\n        <a-tree-node key="0-0-0-2" title="leaf" />\r\n      </a-tree-node>\r\n      <a-tree-node key="0-0-1" title="parent 1-1">\r\n        <a-tree-node key="0-0-1-0" title="leaf" />\r\n      </a-tree-node>\r\n      <a-tree-node key="0-0-2" title="parent 1-2">\r\n        <a-tree-node key="0-0-2-0" title="leaf" />\r\n        <a-tree-node key="0-0-2-1" title="leaf" />\r\n      </a-tree-node>\r\n    </a-tree-node>\r\n  </a-tree>\r\n</template>\r\n<script>\r\nexport default {\r\n  methods: {\r\n    onSelect(selectedKeys, info) {\r\n      console.log(\'selected\', selectedKeys, info);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n'},2750:function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement;return(e._self._c||t)("a-tree",{attrs:{checkable:"","expanded-keys":e.expandedKeys,"auto-expand-parent":e.autoExpandParent,"selected-keys":e.selectedKeys,"tree-data":e.treeData},on:{expand:e.onExpand,select:e.onSelect},model:{value:e.checkedKeys,callback:function(t){e.checkedKeys=t},expression:"checkedKeys"}})};r._withStripped=!0;var a=[{title:"0-0",key:"0-0",children:[{title:"0-0-0",key:"0-0-0",children:[{title:"0-0-0-0",key:"0-0-0-0"},{title:"0-0-0-1",key:"0-0-0-1"},{title:"0-0-0-2",key:"0-0-0-2"}]},{title:"0-0-1",key:"0-0-1",children:[{title:"0-0-1-0",key:"0-0-1-0"},{title:"0-0-1-1",key:"0-0-1-1"},{title:"0-0-1-2",key:"0-0-1-2"}]},{title:"0-0-2",key:"0-0-2"}]},{title:"0-1",key:"0-1",children:[{title:"0-1-0-0",key:"0-1-0-0"},{title:"0-1-0-1",key:"0-1-0-1"},{title:"0-1-0-2",key:"0-1-0-2"}]},{title:"0-2",key:"0-2"}],o={data:function(){return{expandedKeys:["0-0-0","0-0-1"],autoExpandParent:!0,checkedKeys:["0-0-0"],selectedKeys:[],treeData:a}},watch:{checkedKeys:function(e){console.log("onCheck",e)}},methods:{onExpand:function(e){console.log("onExpand",e),this.expandedKeys=e,this.autoExpandParent=!1},onCheck:function(e){console.log("onCheck",e),this.checkedKeys=e},onSelect:function(e,t){console.log("onSelect",t),this.selectedKeys=e}}},d=n(32),l=n(2432),s=n.n(l),i=n(2433),c=n.n(i),v=Object(d.a)(o,r,[],!1,null,null,null);"function"==typeof s.a&&s()(v),"function"==typeof c.a&&c()(v),v.options.__file="components/tree/demo/controlled-tree.vue";var _=v.exports,p=n(2434),h=n.n(p),u=function(){var e=this.$createElement;return(this._self._c||e)("a-tree",{attrs:{checkable:"","tree-data":this.treeData,"default-expanded-keys":["0-0-0","0-0-1"],"default-selected-keys":["0-0-0","0-0-1"],"default-checked-keys":["0-0-0","0-0-1"],"replace-fields":this.replaceFields},on:{select:this.onSelect,check:this.onCheck}})};u._withStripped=!0;var y=[{name:"parent 1",key:"0-0",child:[{name:"张晨成",key:"0-0-0",disabled:!0,child:[{name:"leaf",key:"0-0-0-0",disableCheckbox:!0},{name:"leaf",key:"0-0-0-1"}]},{name:"parent 1-1",key:"0-0-1",child:[{key:"0-0-1-0",name:"zcvc"}]}]}],f={data:function(){return{treeData:y,replaceFields:{children:"child",title:"name"}}},methods:{onSelect:function(e,t){console.log("selected",e,t)},onCheck:function(e,t){console.log("onCheck",e,t)}}},k=n(2435),m=n.n(k),x=n(2436),g=n.n(x),b=Object(d.a)(f,u,[],!1,null,null,null);"function"==typeof m.a&&m()(b),"function"==typeof g.a&&g()(b),b.options.__file="components/tree/demo/replacefields.vue";var K=b.exports,w=n(2437),D=n.n(w),E=function(){var e=this.$createElement;return(this._self._c||e)("a-tree",{staticClass:"draggable-tree",attrs:{"default-expanded-keys":this.expandedKeys,draggable:"","tree-data":this.gData},on:{dragenter:this.onDragEnter,drop:this.onDrop}})};E._withStripped=!0;var S=n(15),C=n.n(S),N=[];!function e(t,n,r){for(var a=n||"0",o=r||N,d=[],l=0;l<3;l++){var s=a+"-"+l;o.push({title:s,key:s}),l<2&&d.push(s)}if(t<0)return o;var i=t-1;d.forEach((function(t,n){return o[n].children=[],e(i,t,o[n].children)}))}(1);var P={data:function(){return{gData:N,expandedKeys:["0-0","0-0-0","0-0-0-0"]}},methods:{onDragEnter:function(e){console.log(e)},onDrop:function(e){console.log(e);var t=e.node.eventKey,n=e.dragNode.eventKey,r=e.node.pos.split("-"),a=e.dropPosition-Number(r[r.length-1]),o=function e(t,n,r){t.forEach((function(t,a,o){return t.key===n?r(t,a,o):t.children?e(t.children,n,r):void 0}))},d=[].concat(C()(this.gData)),l=void 0;if(o(d,n,(function(e,t,n){n.splice(t,1),l=e})),e.dropToGap)if((e.node.children||[]).length>0&&e.node.expanded&&1===a)o(d,t,(function(e){e.children=e.children||[],e.children.unshift(l)}));else{var s=void 0,i=void 0;o(d,t,(function(e,t,n){s=n,i=t})),-1===a?s.splice(i,0,l):s.splice(i+1,0,l)}else o(d,t,(function(e){e.children=e.children||[],e.children.push(l)}));this.gData=d}}},O=n(2438),I=n.n(O),L=n(2439),T=n.n(L),j=Object(d.a)(P,E,[],!1,null,null,null);"function"==typeof I.a&&I()(j),"function"==typeof T.a&&T()(j),j.options.__file="components/tree/demo/draggable.vue";var $=j.exports,V=n(2440),z=n.n(V),A=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticStyle:{"margin-bottom":"16px"}},[e._v("\n    showLine: "),n("a-switch",{model:{value:e.showLine,callback:function(t){e.showLine=t},expression:"showLine"}}),e._v(" "),n("br"),e._v(" "),n("br"),e._v("\n    showIcon: "),n("a-switch",{model:{value:e.showIcon,callback:function(t){e.showIcon=t},expression:"showIcon"}})],1),e._v(" "),n("a-tree",{attrs:{"show-line":e.showLine,"show-icon":e.showIcon,"default-expanded-keys":["0-0-0","0-0-1","0-0-2"]},on:{select:e.onSelect}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"}),e._v(" "),n("a-tree-node",{key:"0-0"},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"}),e._v(" "),n("span",{staticStyle:{color:"#1890ff"},attrs:{slot:"title"},slot:"title"},[e._v("parent 1")]),e._v(" "),n("a-tree-node",{key:"0-0-0",attrs:{title:"parent 1-0"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"}),e._v(" "),n("a-tree-node",{key:"0-0-0-0",attrs:{title:"leaf"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"})],1),e._v(" "),n("a-tree-node",{key:"0-0-0-1",attrs:{title:"leaf"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"})],1),e._v(" "),n("a-tree-node",{key:"0-0-0-2",attrs:{title:"leaf"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"})],1)],1),e._v(" "),n("a-tree-node",{key:"0-0-1",attrs:{title:"parent 1-1"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"}),e._v(" "),n("a-tree-node",{key:"0-0-1-0",attrs:{title:"leaf"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"})],1)],1),e._v(" "),n("a-tree-node",{key:"0-0-2",attrs:{title:"parent 1-2"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"}),e._v(" "),n("a-tree-node",{key:"0-0-2-0",attrs:{title:"leaf"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"})],1),e._v(" "),n("a-tree-node",{key:"0-0-2-1",attrs:{title:"leaf"}},[n("a-icon",{attrs:{slot:"icon",type:"carry-out"},slot:"icon"}),e._v(" "),n("a-icon",{attrs:{slot:"switcherIcon",type:"form"},slot:"switcherIcon"})],1)],1)],1)],1)],1)};A._withStripped=!0;var F={data:function(){return{showLine:!0,showIcon:!1}},methods:{onSelect:function(e,t){console.log("selected",e,t)}}},X=n(2441),R=n.n(X),Q=n(2442),G=n.n(Q),J=Object(d.a)(F,A,[],!1,null,null,null);"function"==typeof R.a&&R()(J),"function"==typeof G.a&&G()(J),J.options.__file="components/tree/demo/tree-with-line.vue";var W=J.exports,B=n(2443),H=n.n(B),M=function(){var e=this.$createElement,t=this._self._c||e;return t("a-directory-tree",{attrs:{multiple:"","default-expand-all":""},on:{select:this.onSelect,expand:this.onExpand}},[t("a-tree-node",{key:"0-0",attrs:{title:"parent 0"}},[t("a-tree-node",{key:"0-0-0",attrs:{title:"leaf 0-0","is-leaf":""}}),this._v(" "),t("a-tree-node",{key:"0-0-1",attrs:{title:"leaf 0-1","is-leaf":""}})],1),this._v(" "),t("a-tree-node",{key:"0-1",attrs:{title:"parent 1"}},[t("a-tree-node",{key:"0-1-0",attrs:{title:"leaf 1-0","is-leaf":""}}),this._v(" "),t("a-tree-node",{key:"0-1-1",attrs:{title:"leaf 1-1","is-leaf":""}})],1)],1)};M._withStripped=!0;var U={methods:{onSelect:function(e,t){console.log("Trigger Select",e,t)},onExpand:function(){console.log("Trigger Expand")}}},q=n(2444),Y=n.n(q),Z=n(2445),ee=n.n(Z),te=Object(d.a)(U,M,[],!1,null,null,null);"function"==typeof Y.a&&Y()(te),"function"==typeof ee.a&&ee()(te),te.options.__file="components/tree/demo/directory.vue";var ne=te.exports,re=n(2446),ae=n.n(re),oe=function(){var e=this.$createElement,t=this._self._c||e;return t("a-tree",{attrs:{checkable:"","tree-data":this.treeData,"default-expanded-keys":["0-0-0","0-0-1"],"default-selected-keys":["0-0-0","0-0-1"],"default-checked-keys":["0-0-0","0-0-1"]},on:{select:this.onSelect,check:this.onCheck}},[t("span",{staticStyle:{color:"#1890ff"},attrs:{slot:"title0010"},slot:"title0010"},[this._v("sss")])])};oe._withStripped=!0;var de=[{title:"parent 1",key:"0-0",children:[{title:"parent 1-0",key:"0-0-0",disabled:!0,children:[{title:"leaf",key:"0-0-0-0",disableCheckbox:!0},{title:"leaf",key:"0-0-0-1"}]},{title:"parent 1-1",key:"0-0-1",children:[{key:"0-0-1-0",slots:{title:"title0010"}}]}]}],le={data:function(){return{treeData:de}},methods:{onSelect:function(e,t){console.log("selected",e,t)},onCheck:function(e,t){console.log("onCheck",e,t)}}},se=n(2447),ie=n.n(se),ce=n(2448),ve=n.n(ce),_e=Object(d.a)(le,oe,[],!1,null,null,null);"function"==typeof ie.a&&ie()(_e),"function"==typeof ve.a&&ve()(_e),_e.options.__file="components/tree/demo/basic.vue";var pe=_e.exports,he=n(2449),ue=n.n(he),ye=function(){var e=this.$createElement,t=this._self._c||e;return t("a-tree",{attrs:{"tree-data":this.treeData,"show-icon":"","default-expand-all":"","default-selected-keys":["0-0-0"]},scopedSlots:this._u([{key:"custom",fn:function(e){var n=e.selected;return[t("a-icon",{attrs:{type:n?"frown":"frown-o"}})]}}])},[t("a-icon",{attrs:{slot:"switcherIcon",type:"down"},slot:"switcherIcon"}),this._v(" "),t("a-icon",{attrs:{slot:"smile",type:"smile-o"},slot:"smile"}),this._v(" "),t("a-icon",{attrs:{slot:"meh",type:"smile-o"},slot:"meh"})],1)};ye._withStripped=!0;var fe=[{title:"parent 1",key:"0-0",slots:{icon:"smile"},children:[{title:"leaf",key:"0-0-0",slots:{icon:"meh"}},{title:"leaf",key:"0-0-1",scopedSlots:{icon:"custom"}}]}],ke={data:function(){return{treeData:fe}},methods:{onSelect:function(e,t){console.log("selected",e,t)},onCheck:function(e,t){console.log("onCheck",e,t)}}},me=n(2450),xe=n.n(me),ge=n(2451),be=n.n(ge),Ke=Object(d.a)(ke,ye,[],!1,null,null,null);"function"==typeof xe.a&&xe()(Ke),"function"==typeof be.a&&be()(Ke),Ke.options.__file="components/tree/demo/customize-icon.vue";var we=Ke.exports,De=n(2452),Ee=n.n(De),Se=function(){var e=this.$createElement;return(this._self._c||e)("a-tree",{attrs:{"load-data":this.onLoadData,"tree-data":this.treeData}})};Se._withStripped=!0;var Ce={data:function(){return{treeData:[{title:"Expand to load",key:"0"},{title:"Expand to load",key:"1"},{title:"Tree Node",key:"2",isLeaf:!0}]}},methods:{onLoadData:function(e){var t=this;return new Promise((function(n){e.dataRef.children?n():setTimeout((function(){e.dataRef.children=[{title:"Child Node",key:e.eventKey+"-0"},{title:"Child Node",key:e.eventKey+"-1"}],t.treeData=[].concat(C()(t.treeData)),n()}),1e3)}))}}},Ne=n(2453),Pe=n.n(Ne),Oe=n(2454),Ie=n.n(Oe),Le=Object(d.a)(Ce,Se,[],!1,null,null,null);"function"==typeof Pe.a&&Pe()(Le),"function"==typeof Ie.a&&Ie()(Le),Le.options.__file="components/tree/demo/load-data-asynchronously.vue";var Te=Le.exports,je=n(2455),$e=n.n(je),Ve=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("a-input-search",{staticStyle:{"margin-bottom":"8px"},attrs:{placeholder:"Search"},on:{change:e.onChange}}),e._v(" "),n("a-tree",{attrs:{"expanded-keys":e.expandedKeys,"auto-expand-parent":e.autoExpandParent,"tree-data":e.gData},on:{expand:e.onExpand},scopedSlots:e._u([{key:"title",fn:function(t){var r=t.title;return[r.indexOf(e.searchValue)>-1?n("span",[e._v("\n        "+e._s(r.substr(0,r.indexOf(e.searchValue)))+"\n        "),n("span",{staticStyle:{color:"#f50"}},[e._v(e._s(e.searchValue))]),e._v("\n        "+e._s(r.substr(r.indexOf(e.searchValue)+e.searchValue.length))+"\n      ")]):n("span",[e._v(e._s(r))])]}}])})],1)};Ve._withStripped=!0;var ze=n(2),Ae=n.n(ze),Fe=[];!function e(t,n,r){for(var a=n||"0",o=r||Fe,d=[],l=0;l<3;l++){var s=a+"-"+l;o.push({title:s,key:s,scopedSlots:{title:"title"}}),l<2&&d.push(s)}if(t<0)return o;var i=t-1;d.forEach((function(t,n){return o[n].children=[],e(i,t,o[n].children)}))}(1);var Xe=[];!function e(t){for(var n=0;n<t.length;n++){var r=t[n],a=r.key;Xe.push({key:a,title:a}),r.children&&e(r.children)}}(Fe);var Re={data:function(){return{expandedKeys:[],searchValue:"",autoExpandParent:!0,gData:Fe}},methods:{onExpand:function(e){this.expandedKeys=e,this.autoExpandParent=!1},onChange:function(e){var t=e.target.value,n=Xe.map((function(e){return e.title.indexOf(t)>-1?function e(t,n){for(var r=void 0,a=0;a<n.length;a++){var o=n[a];o.children&&(o.children.some((function(e){return e.key===t}))?r=o.key:e(t,o.children)&&(r=e(t,o.children)))}return r}(e.key,Fe):null})).filter((function(e,t,n){return e&&n.indexOf(e)===t}));Ae()(this,{expandedKeys:n,searchValue:t,autoExpandParent:!0})}}},Qe=n(2456),Ge=n.n(Qe),Je=n(2457),We=n.n(Je),Be=Object(d.a)(Re,Ve,[],!1,null,null,null);"function"==typeof Ge.a&&Ge()(Be),"function"==typeof We.a&&We()(Be),Be.options.__file="components/tree/demo/searchable.vue";var He=Be.exports,Me=n(2458),Ue=n.n(Me),qe=function(){var e=this.$createElement,t=this._self._c||e;return t("a-tree",{attrs:{"show-line":"","default-expanded-keys":["0-0-0"]},on:{select:this.onSelect}},[t("a-icon",{attrs:{slot:"switcherIcon",type:"down"},slot:"switcherIcon"}),this._v(" "),t("a-tree-node",{key:"0-0",attrs:{title:"parent 1"}},[t("a-tree-node",{key:"0-0-0",attrs:{title:"parent 1-0"}},[t("a-tree-node",{key:"0-0-0-0",attrs:{title:"leaf"}}),this._v(" "),t("a-tree-node",{key:"0-0-0-1",attrs:{title:"leaf"}}),this._v(" "),t("a-tree-node",{key:"0-0-0-2",attrs:{title:"leaf"}})],1),this._v(" "),t("a-tree-node",{key:"0-0-1",attrs:{title:"parent 1-1"}},[t("a-tree-node",{key:"0-0-1-0",attrs:{title:"leaf"}})],1),this._v(" "),t("a-tree-node",{key:"0-0-2",attrs:{title:"parent 1-2"}},[t("a-tree-node",{key:"0-0-2-0",attrs:{title:"leaf"}}),this._v(" "),t("a-tree-node",{key:"0-0-2-1",attrs:{title:"leaf"}})],1)],1)],1)};qe._withStripped=!0;var Ye={methods:{onSelect:function(e,t){console.log("selected",e,t)}}},Ze=n(2459),et=n.n(Ze),tt=n(2460),nt=n.n(tt),rt=Object(d.a)(Ye,qe,[],!1,null,null,null);"function"==typeof et.a&&et()(rt),"function"==typeof nt.a&&nt()(rt),rt.options.__file="components/tree/demo/customize-collapse_expand-icon.vue";var at=rt.exports,ot=n(2461),dt=n.n(ot),lt=function(){var e=this.$createElement;this._self._c;return this._m(0)};lt._withStripped=!0;var st=Object(d.a)({},lt,[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h2",{attrs:{id:"API"}},[e._v("API "),n("a",{staticClass:"anchor",attrs:{href:"#API","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),n("h3",{attrs:{id:"Tree-props"}},[e._v("Tree props "),n("a",{staticClass:"anchor",attrs:{href:"#Tree-props","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),e._v(" "),n("th",[e._v("说明")]),e._v(" "),n("th",[e._v("类型")]),e._v(" "),n("th",[e._v("默认值")]),e._v(" "),n("th",[e._v("版本")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("blockNode")]),e._v(" "),n("td",[e._v("是否节点占据一行")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td",[e._v("1.5.0")])]),e._v(" "),n("tr",[n("td",[e._v("treeData")]),e._v(" "),n("td",[e._v("treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（key 在整个树范围内唯一）")]),e._v(" "),n("td",[e._v("array<{key, title, children, [disabled, selectable]}>")]),e._v(" "),n("td",[e._v("--")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("replaceFields")]),e._v(" "),n("td",[e._v("替换 treeNode 中 title,key,children 字段为 treeData 中对应的字段")]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td",[e._v("{children:'children', title:'title', key:'key' }")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("autoExpandParent")]),e._v(" "),n("td",[e._v("是否自动展开父节点")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("true")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("checkable")]),e._v(" "),n("td",[e._v("节点前添加 Checkbox 复选框")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("checkedKeys(v-model)")]),e._v(" "),n("td",[e._v("（受控）选中复选框的树节点（注意：父子节点有关联，如果传入父节点 key，则子节点自动选中；相应当子节点 key 都传入，父节点也自动选中。当设置"),n("code",{pre:!0},[e._v("checkable")]),e._v("和"),n("code",{pre:!0},[e._v("checkStrictly")]),e._v("，它是一个有"),n("code",{pre:!0},[e._v("checked")]),e._v("和"),n("code",{pre:!0},[e._v("halfChecked")]),e._v("属性的对象，并且父子节点的选中与否不再关联")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("number[]")]),e._v(" "),n("td",[e._v("{checked: string[]")])]),e._v(" "),n("tr",[n("td",[e._v("checkStrictly")]),e._v(" "),n("td",[e._v("checkable 状态下节点选择完全受控（父子节点选中状态不再关联）")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("defaultCheckedKeys")]),e._v(" "),n("td",[e._v("默认选中复选框的树节点")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("number[]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("defaultExpandAll")]),e._v(" "),n("td",[e._v("默认展开所有树节点")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("defaultExpandedKeys")]),e._v(" "),n("td",[e._v("默认展开指定的树节点")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("number[]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("defaultExpandParent")]),e._v(" "),n("td",[e._v("默认展开父节点")]),e._v(" "),n("td",[e._v("bool")]),e._v(" "),n("td",[e._v("true")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("defaultSelectedKeys")]),e._v(" "),n("td",[e._v("默认选中的树节点")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("number[]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("disabled")]),e._v(" "),n("td",[e._v("将树禁用")]),e._v(" "),n("td",[e._v("bool")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("draggable")]),e._v(" "),n("td",[e._v("设置节点可拖拽")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("expandedKeys(.sync)")]),e._v(" "),n("td",[e._v("（受控）展开指定的树节点")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("number[]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("filterTreeNode")]),e._v(" "),n("td",[e._v("按需筛选树节点（高亮），返回 true")]),e._v(" "),n("td",[e._v("function(node)")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("loadData")]),e._v(" "),n("td",[e._v("异步加载数据")]),e._v(" "),n("td",[e._v("function(node)")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("loadedKeys")]),e._v(" "),n("td",[e._v("（受控）已经加载的节点，需要配合 "),n("code",{pre:!0},[e._v("loadData")]),e._v(" 使用")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("number[]")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("multiple")]),e._v(" "),n("td",[e._v("支持点选多个节点（节点本身）")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("selectable")]),e._v(" "),n("td",[e._v("是否可选中")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("true")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("selectedKeys(.sync)")]),e._v(" "),n("td",[e._v("（受控）设置选中的树节点")]),e._v(" "),n("td",[e._v("string[]")]),e._v(" "),n("td",[e._v("number[]")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("showIcon")]),e._v(" "),n("td",[e._v("是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("switcherIcon")]),e._v(" "),n("td",[e._v("自定义树节点的展开/折叠图标")]),e._v(" "),n("td",[e._v("slot")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("showLine")]),e._v(" "),n("td",[e._v("是否展示连接线")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")])])]),e._v(" "),n("h3",{attrs:{id:"事件"}},[e._v("事件 "),n("a",{staticClass:"anchor",attrs:{href:"#事件","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("事件名称")]),e._v(" "),n("th",[e._v("说明")]),e._v(" "),n("th",[e._v("回调参数")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("check")]),e._v(" "),n("td",[e._v("点击复选框触发")]),e._v(" "),n("td",[e._v("function(checkedKeys, e:{checked: bool, checkedNodes, node, event})")])]),e._v(" "),n("tr",[n("td",[e._v("dragend")]),e._v(" "),n("td",[e._v("dragend 触发时调用")]),e._v(" "),n("td",[e._v("function({event, node})")])]),e._v(" "),n("tr",[n("td",[e._v("dragenter")]),e._v(" "),n("td",[e._v("dragenter 触发时调用")]),e._v(" "),n("td",[e._v("function({event, node, expandedKeys})")])]),e._v(" "),n("tr",[n("td",[e._v("dragleave")]),e._v(" "),n("td",[e._v("dragleave 触发时调用")]),e._v(" "),n("td",[e._v("function({event, node})")])]),e._v(" "),n("tr",[n("td",[e._v("dragover")]),e._v(" "),n("td",[e._v("dragover 触发时调用")]),e._v(" "),n("td",[e._v("function({event, node})")])]),e._v(" "),n("tr",[n("td",[e._v("dragstart")]),e._v(" "),n("td",[e._v("开始拖拽时调用")]),e._v(" "),n("td",[e._v("function({event, node})")])]),e._v(" "),n("tr",[n("td",[e._v("drop")]),e._v(" "),n("td",[e._v("drop 触发时调用")]),e._v(" "),n("td",[e._v("function({event, node, dragNode, dragNodesKeys})")])]),e._v(" "),n("tr",[n("td",[e._v("expand")]),e._v(" "),n("td",[e._v("展开/收起节点时触发")]),e._v(" "),n("td",[e._v("function(expandedKeys, {expanded: bool, node})")])]),e._v(" "),n("tr",[n("td",[e._v("load")]),e._v(" "),n("td",[e._v("节点加载完毕时触发")]),e._v(" "),n("td",[e._v("function(loadedKeys, {event, node})")])]),e._v(" "),n("tr",[n("td",[e._v("rightClick")]),e._v(" "),n("td",[e._v("响应右键点击")]),e._v(" "),n("td",[e._v("function({event, node})")])]),e._v(" "),n("tr",[n("td",[e._v("select")]),e._v(" "),n("td",[e._v("点击树节点触发")]),e._v(" "),n("td",[e._v("function(selectedKeys, e:{selected: bool, selectedNodes, node, event})")])])])]),e._v(" "),n("h3",{attrs:{id:"TreeNode-props"}},[e._v("TreeNode props "),n("a",{staticClass:"anchor",attrs:{href:"#TreeNode-props","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),n("p",[e._v("结点描述数据对象，是 treeNodes 中的一项，TreeNode 使用相同的 API。")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),e._v(" "),n("th",[e._v("说明")]),e._v(" "),n("th",[e._v("类型")]),e._v(" "),n("th",[e._v("默认值")]),e._v(" "),n("th",[e._v("版本")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("class")]),e._v(" "),n("td",[e._v("节点的 class")]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("style")]),e._v(" "),n("td",[e._v("节点的 style")]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("checkable")]),e._v(" "),n("td",[e._v("当树为 checkable 时，设置独立节点是否展示 Checkbox")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("1.5.0")])]),e._v(" "),n("tr",[n("td",[e._v("disableCheckbox")]),e._v(" "),n("td",[e._v("禁掉 checkbox")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("disabled")]),e._v(" "),n("td",[e._v("禁掉响应")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("icon")]),e._v(" "),n("td",[e._v("自定义图标。可接收组件，props 为当前节点 props")]),e._v(" "),n("td",[e._v("slot")]),e._v(" "),n("td",[e._v("slot-scope")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("isLeaf")]),e._v(" "),n("td",[e._v("设置为叶子节点(设置了"),n("code",{pre:!0},[e._v("loadData")]),e._v("时有效)")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("false")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("key")]),e._v(" "),n("td",[e._v("被树的 (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys 属性所用。注意：整个树范围内的所有节点的 key 值不能重复！")]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td",[e._v("number")]),e._v(" "),n("td",[e._v("内部计算出的节点位置")])]),e._v(" "),n("tr",[n("td",[e._v("selectable")]),e._v(" "),n("td",[e._v("设置节点是否可被选中")]),e._v(" "),n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("true")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("title")]),e._v(" "),n("td",[e._v("标题")]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td",[e._v("slot")]),e._v(" "),n("td",[e._v("slot-scope")])]),e._v(" "),n("tr",[n("td",[e._v("slots")]),e._v(" "),n("td",[e._v("使用 treeNodes 时，可以通过该属性配置支持 slot 的属性，如 "),n("code",{pre:!0},[e._v("slots: { title: 'XXX'}")])]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("scopedSlots")]),e._v(" "),n("td",[e._v("使用 columns 时，可以通过该属性配置支持 slot-scope 的属性，如 "),n("code",{pre:!0},[e._v("scopedSlots: { title: 'XXX'}")])]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("on")]),e._v(" "),n("td",[e._v("事件对象，仅在 treeNodes 使用方式中生效，如"),n("code",{pre:!0},[e._v("{click: () => {}}")])]),e._v(" "),n("td",[e._v("object")]),e._v(" "),n("td",[e._v("'---'")]),e._v(" "),n("td")])])]),e._v(" "),n("h3",{attrs:{id:"DirectoryTree-props"}},[e._v("DirectoryTree props "),n("a",{staticClass:"anchor",attrs:{href:"#DirectoryTree-props","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),e._v(" "),n("th",[e._v("说明")]),e._v(" "),n("th",[e._v("类型")]),e._v(" "),n("th",[e._v("默认值")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("expandAction")]),e._v(" "),n("td",[e._v("目录展开逻辑，可选 "),n("code",{pre:!0},[e._v("false")]),e._v(" "),n("code",{pre:!0},[e._v("'click'")]),e._v(" "),n("code",{pre:!0},[e._v("'dblclick'")])]),e._v(" "),n("td",[e._v("string")]),e._v(" "),n("td",[e._v("click")])])])]),e._v(" "),n("h2",{attrs:{id:"FAQ"}},[e._v("FAQ "),n("a",{staticClass:"anchor",attrs:{href:"#FAQ","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),n("h3",{attrs:{id:"在-showLine-时，如何隐藏子节点图标？"}},[e._v("在 showLine 时，如何隐藏子节点图标？ "),n("a",{staticClass:"anchor",attrs:{href:"#在-showLine-时，如何隐藏子节点图标？","aria-hidden":"true"}},[e._v("#")])]),e._v(" "),n("p",[e._v("文件图标通过 switcherIcon 来实现，如果不需要你可以覆盖对应的样式")])])}],!1,null,null,null);st.options.__file="components/tree/index.zh-CN.md";var it=st.exports,ct=function(){var e=this.$createElement;return(this._self._c||e)("div")};ct._withStripped=!0;var vt=Object(d.a)({},ct,[],!1,null,null,null);vt.options.__file="components/tree/index.en-US.md";var _t=vt.exports,pt="",ht="# 树形控件\n\n## 何时使用\n\n文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。使用`树控件`可以完整展现其中的层级关系，并具有展开收起选择等交互功能。\n\n## 代码演示",ut={category:"Components",subtitle:"树形控件",type:"Data Display",zhType:"数据展示",cols:2,title:"Tree",render:function(){var e=arguments[0];return e("div",[e("md",{attrs:{cn:ht,us:pt}}),e("a-row",{style:"margin-left: -8px;margin-right: -8px;"},[e("a-col",{attrs:{span:12},class:"code-boxes-col-2-1"},[e("demo-container",{attrs:{code:h.a}},[e(_)]),e("demo-container",{attrs:{code:D.a}},[e(K)]),e("demo-container",{attrs:{code:z.a}},[e($)]),e("demo-container",{attrs:{code:H.a}},[e(W)]),e("demo-container",{attrs:{code:ae.a}},[e(ne)])]),e("a-col",{attrs:{span:12},class:"code-boxes-col-2-1"},[e("demo-container",{attrs:{code:ue.a}},[e(pe)]),e("demo-container",{attrs:{code:Ee.a}},[e(we)]),e("demo-container",{attrs:{code:$e.a}},[e(Te)]),e("demo-container",{attrs:{code:Ue.a}},[e(He)]),e("demo-container",{attrs:{code:dt.a}},[e(at)])])]),e("api",[e(it,{slot:"cn"}),e(_t)])])}},yt=Object(d.a)(ut,void 0,void 0,!1,null,null,null);yt.options.__file="components/tree/demo/index.vue";t.default=yt.exports}}]);